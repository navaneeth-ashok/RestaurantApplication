@model RestaurantApplication.Models.Booking

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_UserPage.cshtml";

}



<link rel="stylesheet" href="~/Content/booking.css">
<h2>Book a Table</h2>

<div class="tableBooking ms-auto me-auto">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @* Sending the default table number as 0, The staff can edit if required *@
            <input type="hidden" name="TableNumber" value="0">
        </div>

        <div class="form-group">
            @Html.Label("Number of Guests", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md">
                @Html.EditorFor(model => model.NumberOfOccupants, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfOccupants, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="slidecontainer">
            <input type="range" min="1" max="10" value="2" class="slider" id="peopleSlider">
        </div>

        <div class="form-group">
            @Html.Label("Date Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md">
                @Html.EditorFor(model => model.BookingDateTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookingDateTime, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.Label("Email ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md">
                @Html.EditorFor(model => model.EMailID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMailID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Allergies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md">
                @Html.EditorFor(model => model.Allergies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Allergies, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md">
                <input type="submit" value="Book a Table" class="btn btn-primary" />
            </div>
        </div>
    </div>
    }

</div>

<script>
    var slider = document.getElementById("peopleSlider");
    var output = document.getElementById("NumberOfOccupants");
    output.value = slider.value; // Display the default slider value

    // Update the current slider value (each time you drag the slider handle)
    slider.oninput = function () {
        output.value = this.value;
    }
</script>

